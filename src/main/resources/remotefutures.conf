general {
    future-timeout-in-ms = 5000
    # remote-execution-context-classname = "org.remotefutures.core.impl.local.LocalRunningRemoteExecutionContext"
    remote-execution-context-classname = "org.remotefutures.core.impl.akka.pullingworker.PullingWorkerRemoteExecutionContext"

    #
    # Distribution strategy
    #
    # FIRST_WIN      means, the task is send to all nodes in a cluster
    #                but only the first reply will be accepted. This is ideal for
    #                low latency applications.
    #
    # LOAD_BALANCING means, the work load is evenly spread across
    #                all nodes available.
    #
    # FAIL_OVER      means, a task is send to one node and if an error or time-out
    #                happens, the same task will be re-send to another node
    #                so that eventually a result will be result.
    #
    distribution-strategy = "LOAD_BALANCING"

    masternodes = []

}

PullingWorkerRemoteExecutionContext {
    masterConfig = "master"
    workerConfig = "worker"
}
