{"name":"Remotefutures","tagline":"Remote execution of futures in a distributed system.","body":"# Remote Futures\r\n\r\nProgramming of distributed asynchronous function execution: Simple, efficient and fast.\r\n\r\n<!-- [![Build Status](https://secure.travis-ci.org/scala/async.png)](http://travis-ci.org/scala/async) -->\r\n[![Build Status](https://travis-ci.org/ProjectZetta/RemoteFutures.svg?branch=master)](https://travis-ci.org/ProjectZetta/RemoteFutures)\r\n\r\n\r\n## About\r\n\r\nThe project \"DistributedRemoteFutures\" provides a programming model that seamlessly integrates additional cloud computing resources\r\nbut without tampering with distributed models and code. It does so by extending Scala's Futures towards a remote execution for simply\r\nadding more computational power according to changing demand. Essentially, distributed remote futures allow you:\r\n- simple and efficient distributed execution\r\n- very fast to program\r\n- easy to maintain.\r\n \r\n### Mailing list\r\nhttps://groups.google.com/forum/#!forum/remotefutures\r\n### Project website\r\nhttp://remotefutures.org\r\n\r\n## Usage and syntax\r\n\r\n### A simple future that is executed remotely\r\n```scala\r\nval rf: Future[String] = Remote {\r\n  Future {\"asdf\"}\r\n}\r\n```\r\n\r\n### A simple future that is executed *remotely* and then mapped *locally*\r\n```scala\r\nval rf : Future[Int] = Remote {\r\n  Future {\"asdf\"}\r\n}.map( x => x.length )\r\n```\r\n\r\n### A simple future that is executed *remotely* and then mapped *remotely*\r\n```scala\r\nval rf : Future[Int] = Remote {\r\n  Future {\"asdf\"}.map( x => x.length )\r\n}\r\n```\r\n\r\n### Two simple futures, both executed *remotely*, but joined *locally*\r\n```scala\r\nval rf1 = Remote { Future { \"asdf\" }}\r\nval rf2 = Remote { Future { \"ghjk\" }}\r\n\r\nval lf : Future[String] = for {\r\n  v1 <- rf1\r\n  v2 <- rf2\r\n} yield v1 + v2\r\n```\r\n\r\n### A collection that executes the map function remotely\r\n```scala\r\n// setup input list to compute Fibonacci numbers for\r\nval xs: List[Long] = (1000000 to (1000000 + 1000)).toList\r\n\r\n// type of fs is List[Future[BigInt]]\r\nval fs = xs.map( Remote(x => Future{FibonacciComputations.fibBigInt(x)}) )\r\n\r\nval r: Future[List[BigInt]] = Future sequence (fs)\r\n```\r\n\r\nMore examples are in the [repo](https://github.com/DistributedRemoteFutures/DistributedRemoteFutures/tree/master/src/main/scala/org/remotefutures/examples)\r\n\r\n\r\n\r\n## Background\r\n\r\nFutures are the abstraction of asynchronous execution of code, whose result will be eventually available.\r\n\r\nThe main purpose of this project is to extend the execution context of futures to gain advantage from the computational power of remote nodes.\r\nInstead of using the local machine's capabilities only, the execution of futures is extended towards a distributed system\r\nwhile still fulfilling a concise, but not intrusive syntax and programming model.\r\n\r\nThus, extending this context of execution yields substantial gain in execution speed and performance\r\nby the extension to nodes of a distributed system, without introducing more complexity from the developer's perspective.\r\n\r\n\r\nRequirements:\r\n--------\r\n\r\n1) JDK 7 [Download](http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html)\r\n\r\n2) SBT 0.13 [Download] (http://www.scala-sbt.org/release/docs/Getting-Started/Setup.html)\r\n\r\n3) Scala 2.10 / 2.11 [Download] (http://scala-lang.org/download/)\r\n\r\n\r\n\r\n## Getting started\r\n\r\n    git clone https://github.com/DistributedRemoteFutures/DistributedRemoteFutures.git\r\n    sbt compile\r\n\r\n\r\n## Contribute\r\n- Issue Tracker: https://github.com/DistributedRemoteFutures/DistributedRemoteFutures/issues?state=open\r\n\r\n- Source Code: https://github.com/DistributedRemoteFutures/DistributedRemoteFutures\r\n\r\n\r\n## Team:\r\n* [Martin Senne](https://github.com/MartinSenne/)\r\n* [Marvin Hansen](https://github.com/marvin-hansen)\r\n\r\n\r\n## Licnse\r\n\r\nThis software is licensed under the Apache 2 license.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}